---
title: "SHAP plot"
---

## Figure 3: Shapley values 
Read in data
```{r}
global_all <- read_rds(here::here(path_models_lag, "shap_global_all.rds")) |> 
   filter(!variable_grp %in% c("day of week (other)", "time of day (other)")) |> 
  mutate(variable_grp = str_remove(variable_grp, "(EMA item)"),
          variable_grp = str_remove(variable_grp, "(demographic)"),
          variable_grp = str_remove(variable_grp, "(other)"),
        variable_grp = str_remove(variable_grp, "[[:punct:]][[:punct:]]")) |> 
   mutate(variable_grp = reorder(variable_grp, mean_value, sum),
          model = factor(model, c("0 lag", "24 lag", "72 lag", "168 lag", "336 lag")))

shap_levels <- global_all |>
  mutate(variable_grp = reorder(variable_grp, mean_value, sum)) |>
  pull(variable_grp) |>
  levels()

# shap_feat <- read_rds(here::here(path_models_lag, "outer_shapsgrp_with_features_downsized_1week_336_v1_nested_main.rds")) |> 
#   mutate(variable_grp = factor(variable_grp, levels = shap_levels),
#          feature_score_z_mean = if_else(variable_grp == "future efficacy ",
#                                         feature_score_z_mean * -1,
#                                         feature_score_z_mean))
shap_feat <- read_rds(here::here(path_models_lag, "outer_shapsgrp_with_features_downsized_1week_0_v1_nested_main.rds")) |>
  mutate(variable_grp = factor(variable_grp, levels = shap_levels),
         feature_score_z_mean = if_else(variable_grp == "future efficacy ",
                                        feature_score_z_mean * -1,
                                        feature_score_z_mean))
```


Global shapley pannel
```{r}
color_codes <- c("#240e31","#75f3d3", "#458892", "#751c6d", "#cb6bce")

panel_shap_global <- global_all |>
   mutate(model = factor(model, levels = c("336 lag", "168 lag", "72 lag", "24 lag", "0 lag" ),
                         labels = c("336 hours", "168 hours", "72 hours", "24 hours", "0 hours" ))) |> 
  ggplot() +
  geom_bar(aes(x = variable_grp, y = mean_value, fill = model), stat = "identity") +
  ylab("Mean(|Shapley Value|)") +
  xlab("") +
  labs(fill = "Model Lag") +
  scale_color_manual(values = color_codes) +
  scale_fill_manual(values = color_codes) +
  theme(axis.text=element_text(size=9.5),
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1),
        legend.position = "right",
        # legend.key.size = unit(.3, 'cm'),
        ) +
  coord_flip()
```


Local Shapley Pannel
```{r}
# panel_shap_local <- shap_feat |>
#   filter(!is.na(variable_grp)) |> 
#   # scale feat score to 0-1
#   mutate(feature_score = (feature_score_z_mean - min(feature_score_z_mean))/(max(feature_score_z_mean)-min(feature_score_z_mean))) |> 
#   ggplot(mapping = aes(x = variable_grp, y = value, color = feature_score)) +
#   ggforce::geom_sina(method = "counts", maxwidth = .7, alpha = .4) +
#   geom_hline(yintercept = 0) +
#   scale_y_continuous(limits = c(-2, 3), breaks = seq(-2, 3)) +
#   ylab("Shapley Value (336 Hour Lag)") +
#   xlab(NULL) +
#   scale_color_gradientn(colors = c("#240e31", "#cb6bce"),
#                         breaks = c(.1, .9),
#                         labels = c("low", "high")) +
#   labs(color = "Feature Value") +
#   theme(legend.position = "right",
#         axis.text=element_text(size=9.5),
#         panel.border = element_rect(colour = "black", fill = NA, linewidth = 1))+
#   coord_flip()

panel_shap_local <- shap_feat |>
  filter(!is.na(variable_grp)) |>
  # scale feat score to 0-1
  mutate(feature_score = (feature_score_z_mean - min(feature_score_z_mean))/(max(feature_score_z_mean)-min(feature_score_z_mean))) |>
  ggplot(mapping = aes(x = variable_grp, y = value, color = feature_score)) +
  ggforce::geom_sina(method = "counts", maxwidth = .7, alpha = .4) +
  geom_hline(yintercept = 0) +
  scale_y_continuous(limits = c(-2, 5), breaks = seq(-2, 5)) +
  ylab("Shapley Value (0 Hour Lag)") +
  xlab(NULL) +
  scale_color_gradientn(colors = c("#240e31", "#cb6bce"),
                        breaks = c(.1, .9),
                        labels = c("low", "high")) +
  labs(color = "Feature Value") +
  theme(legend.position = "right",
        axis.text=element_text(size=9.5),
        panel.border = element_rect(colour = "black", fill = NA, linewidth = 1))+
  coord_flip()
```



```{r}
#| label: fig-shap
#| fig-cap: "Panel A depicts the global importance (mean |Shapley value|) for feature categories for each model. Feature categories are ordered by their aggregate global importance (i.e., total bar length) across the five models. The importance of each feature category for specific models is displayed separately by color. Panel B shows the local feature importance for the 0 hour lagged model."
#| fig-height: 5.5
#| fig-width: 7

cowplot::plot_grid(panel_shap_global, panel_shap_local, ncol = 1, labels = c("A", "B"), align = "v")

```
