---
title: "Validation auROC histogram and posterior probability distribution"
author: "John Curtin & Claire Punturieri"
date: "`r lubridate::today()`"
output: 
  html_document:
    toc: true 
    toc_depth: 4
format:
  html:
    embed-resources: true
params:
  study: "gps"
  version: "v6"
  cv: "nested_1_x_10_3_x_10"
  algorithms: "xgboost"   # "all" or name of specific algorithm
  model: "main"
editor_options: 
  chunk_output_type: console
---

# Housekeeping

## Code status

Complete for use in GPS study as of 10/2024.

## Notes

Generates a median auROC histogram for best model configuration.

# Set Up

## Set Up Environment

### Study parameters
```{r}
study <- params$study
cv <- params$cv
model <- params$model
algorithms <- params$algorithms
version <- params$version
```

### Defaults
```{r}
#| message: false
#| warning: false

# handle conflicts
options(conflicts.policy = "depends.ok")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true")
tidymodels_conflictRules()

knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')

options(tibble.width = Inf)
options(tibble.print_max = Inf)
```

### Packages for script
```{r}
#| message: false
#| warning: false

library(tidyverse)
library(tidyposterior)
library(paletteer)

theme_set(theme_classic())

# EDA
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
# CHTC support functions
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true")
```


### Absolute paths
```{r}
path_models <- format_path(str_c("studydata/risk/models/", study))
```

# Generate performance metric plot

```{r}
# probs_local <- read_rds(file.path(path_models, str_c("inner_preds_", 
#                                             window, "_", version, "_", 
#                                             cv, "_", model, ".rds"))) |>
#    mutate(prob = prob_logi) |> 
# #   #pivot_longer(cols = starts_with("prob"), 
# #                #names_to = "method", 
# #                #values_to = ".pred_Lapse") |>
#    glimpse()

probs <- read_csv(here::here(path_models, str_c("best_config_",
                                             version, "_",
                                             cv, "_", model, ".csv"))) |> 
  glimpse()
```

Calculate auROC in each fold
```{r}
# auROCs <- probs |>
#   group_by(outer_split_num, inner_split_num) |>
#   summarize(auROC = roc_auc_vec(truth = label, estimate = prob),
#             .groups = "drop")
# 
# auROCs |> pull(auROC) |> median()
```


Generate plot across all *inner* folds.
```{r}
#| label: fig-auroc-histogram
#| fig-cap: Area under the receiver operating characteristic (auROC) curves for each of 300 (10 x 30) cross validation splits. The dashed line represents the median auROC across all 300 splits.
#| fig-height: 4
#| fig-width: 5

# auROCs |> 
#   ggplot(aes(x = auROC)) +
#   geom_histogram(bins = 10, fill = c("#af1f21")) +
#   geom_vline(xintercept = median(auROCs$auROC), color = c("#f29c96"), lwd = 1, linetype="longdash") +
#   labs(x = "auROC", y = "Frequency")
probs |> 
  ggplot(aes(x = roc_auc)) +
  geom_histogram(bins = 15, color = "white", fill = "#af1f21") +
  #geom_step(bins = 10, fill = c("#af1f21")) +
  #stat_bin(geom="step", bins = 10, color = c("#af1f21"), lwd = 1) +
  geom_vline(xintercept = median(probs$roc_auc), color = c("white"), lwd = .5, linetype="dashed") +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "auROC", y = "Frequency")
```

# Posteriors

```{r}
# from ?perf_mod()
# Repeated CV (id = repeat, id2 = fold within repeat)
# with a common variance:  statistic ~ model + (model | id2/id)

if(file.exists(here::here(path_models, str_c("pp_",
                                    version, "_",
                                    cv, "_", model, ".rds")))) {
  
  message("Model exists! Loading in...")
  
  pp <- read_rds(here::here(path_models, str_c("pp_",
                                    version, "_",
                                    cv, "_", model, ".rds")))
} else {
  
    message("Model does not exist! Running and saving out...")
  
  set.seed(101)
  
  pp <- probs |> #auROCs |>
    select(outer_split_num, inner_split_num, roc_auc) |> 
           #auROC) |> 
    rename(id = outer_split_num,
           id2 = inner_split_num) |> 
    perf_mod(formula = statistic ~ 1 + (1 | id/id2),
             # prior_intercept = rstanarm::student_t(autoscale = TRUE),
             # prior = rstanarm::student_t(autoscale = TRUE),
             transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
             iter = 13000, chains = 4,
             adapt_delta = .99999999,
             # cores = 4, seed = 12345,
             family = gaussian)  


  pp |> write_rds(here::here(path_models, str_c("pp_",
                                                version, "_",
                                                cv, "_", model, ".rds")))
}
```

Posterior graph as density plot
```{r}
#| label: fig-pp
#| fig-cap: Posterior probability distribution of model performance with a 95% credible interval. The dashed line represents median auROC across the sampling distribution, while the dotted line represents chance performance (auROC = 0.50).
#| fig-height: 2.5
#| fig-width: 5


pp_tidy <- pp |> 
  tidy(seed = 123)

q <- c(0.025, 0.5, 0.975)

ci_day <- pp_tidy |> 
  summarize(median = quantile(posterior, probs = q[2]),
            lower = quantile(posterior, probs = q[1]), 
            upper = quantile(posterior, probs = q[3])) |> 
  mutate(y = 30)

pp_tidy |> 
  ggplot(aes(x = posterior)) + 
  geom_density(color = "#af1f21", fill = "#af1f21", alpha = .85, lwd = .8) +
  #geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper), color = c("#af1f21"),
                #data = ci_day, lwd = 1) +
  geom_vline(xintercept = ci_day$median, color = "white", lwd = .5, linetype="dashed") +
  geom_errorbar(aes(y = ci_day$y, xmin = ci_day$lower, xmax = ci_day$upper), color = "darkblue", lwd = .3) +
  geom_vline(xintercept = .5, lwd = .5, linetype="dotted") +
  scale_x_continuous(limits=c(0.49,.76)) +
  scale_y_continuous(expand = c(0,0)) +
  ylab("Posterior Probability Density") +
  xlab("Area Under ROC Curve")
```

```{r}
pp_tidy <- pp |> 
  tidy(seed = 123) |> 
  write_csv(here::here("objects", "pp_tidy.csv"))

pp_tidy |> 
 summarize(prob = mean(posterior > .5)) 
```






