---
title: "Generate INNER posteriors for `r params$model` models of training jobs from CHTC for `r params$study` study with version `r params$version` using `r params$cv` CV"
author: "John Curtin & Kendra Wyant, edited by Claire Punturieri"
date: "`r lubridate::today()`"
output: 
  html_document:
    toc: true 
    toc_depth: 4
format:
  html:
    embed-resources: true
params:
  study: "gps"
  version: "v5"
  cv: "nested_1_x_10_3_x_10"
  algorithms: "xgboost"   # "all" or name of specific algorithm
  model: "main"
editor_options: 
  chunk_output_type: console
---


```{r}
study <- params$study
cv <- params$cv
model <- params$model
algorithms <- params$algorithms
version <- params$version
```

Function conflicts
```{r, packages_workflow}
#| message: false
#| warning: false

# handle conflicts
options(conflicts.policy = "depends.ok")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true")
tidymodels_conflictRules()
```

Packages for script
```{r, packages_script}
#| message: false
#| warning: false

library(tidyverse)
library(tidymodels)
library(tidyposterior)
# library(SHAPforxgboost)
# library(rstanarm)

theme_set(theme_classic()) 
```

Source support functions
```{r source_functions}
# EDA
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
# CHTC support functions
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true")
```


Absolute paths
```{r, absolute_paths}
path_processed <- format_path(str_c("studydata/risk/data_processed/", study))
```


Chunk Defaults
```{r defaults}
#| include: false

knitr::opts_chunk$set(attr.output='style="max-height: 500px;"')

options(tibble.width = Inf)
options(tibble.print_max = Inf)
```

## Posteriors

### Read in preds and metrics for best model

```{r load_preds_metrics}
# UPDATE INPUT FILE
auc_day <- read_rds(file.path(path_processed, "inner_predictions.rds")) |>
  # cp: added these two lines because I think I need to change something in my predictions script to fix this...?
  select(outer_split_num, inner_split_num, auroc) |> 
  unique() |> 
  # end of cp additions
  arrange(outer_split_num) |>
  # cp update splits
  mutate(repeat_num = rep(str_c("repeat", 1:10), times = 30),
         fold_num = rep(str_c("fold", 1:30), each = 10)) |> 
  #mutate(repeat_num = rep(str_c("repeat", 1:3), each = 10),
         #fold_num = rep(str_c("fold", 1:10), 3)) |>   # assumes 3x10 fold
  select(repeat_num, fold_num, auroc)
```

```{r auc_plots}
auc_day |> 
  ggplot() + 
  geom_histogram(aes(x = auroc), bins = 10)
```

### All models

```{r bayes}
# from ?perf_mod()
# Repeated CV (id = repeat, id2 = fold within repeat)
# with a common variance:  statistic ~ model + (model | id2/id)
set.seed(101)
pp <- auc_day |> 
  rename(id = repeat_num,
         id2 = fold_num) |> 
  perf_mod(formula = statistic ~ model + (1 | id2/id),
         # prior_intercept = rstanarm::student_t(autoscale = TRUE),
         # prior = rstanarm::student_t(autoscale = TRUE),
         transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
         # iter = 2000, chains = 4,  
         adapt_delta = .99,
         # cores = 4, seed = 12345,
         family = gaussian)  
```

```{r}
rstanarm::prior_summary(pp$stan)
```

```{r}
summary(pp$stan)
```

```{r}
# shinystan::launch_shinystan(pp$stan)
```

```{r}
pp  |>   write_rds(file.path(path_models, "posteriors_all_0_v5_nested.rds"))
```

### Model posterier CIs

```{r}
pp_tidy <- pp |> 
  tidy(seed = 123)

q = c(.025, .5, .975)
pp_tidy |> 
  group_by(model) |> 
  summarize(median = quantile(posterior, probs = q[2]),
            lower = quantile(posterior, probs = q[1]), 
            upper = quantile(posterior, probs = q[3])) |> 
  mutate(model = factor(model, levels = c("week", "day", "hour"),
                        labels = c("Week", "Day", "Hour")),
         y = 1000) |> 
  arrange(model)

```

### Plots

Model posteriors
```{r}
pp_tidy <- pp |> 
  tidy(seed = 123)

ci <- pp_tidy |> 
  summary() #|> 
  #mutate(model = factor(model, levels = c("week", "day", "hour")),
         #y = 1000)

pp_tidy |> 
  #mutate(model = factor(model, levels = c("week", "day", "hour"))) |>
  ggplot() + 
  geom_histogram(aes(x = posterior), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean),
               data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper),
                data = ci) +
  #facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  # ylab("Posterior Probability Density") +
  xlab("Area Under ROC Curve")
```



### Baseline model comparison

Read in baseline models
```{r load_preds_metrics_baseline}
# REPLACE FILE
auc_day <- read_rds(file.path(path_models, "outer_metrics_1day_0_v3_nested_baseline.rds")) |> 
  arrange(outer_split_num) |> 
  mutate(repeat_num = rep(str_c("repeat", 1:3), each = 10),
         fold_num = rep(str_c("fold", 1:10),3)) |>   # assumes 3x10 fold
  select(repeat_num, fold_num, roc_auc)
```



Calculate posteriors

```{r}
# from ?perf_mod()
# Repeated CV (id = repeat, id2 = fold within repeat)
# with a common variance:  statistic ~ model + (model | id2/id)
set.seed(101)
pp_day <- auc_day |> 
  rename(id = repeat_num,
         id2 = fold_num) |> 
  # REMOVE MODEL FROM FORMULA
  perf_mod(formula = statistic ~ model + (1 | id2/id),
         # prior_intercept = rstanarm::student_t(autoscale = TRUE),
         # prior = rstanarm::student_t(autoscale = TRUE),
         transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
         # iter = 2000, chains = 4,  
         adapt_delta = .99,
         # cores = 4, seed = 12345,
         family = gaussian, 
)  
```

```{r}
rstanarm::prior_summary(pp_day$stan)
```

```{r}
summary(pp_day$stan)
```


```{r}
# CHANGE NAME OF OUTPUT FILE
pp_day |>  write_rds(file.path(path_models, "posteriors_all_0_v3_nested_baseline.rds"))
```

Posterior CI's 

```{r}
pp_day_tidy <- pp_day |> 
  tidy(seed = 123)

q = c(.025, .5, .975)
pp_day_tidy |> 
  #group_by(model) |> 
  summarize(median = quantile(posterior, probs = q[2]),
            lower = quantile(posterior, probs = q[1]), 
            upper = quantile(posterior, probs = q[3])) #|> 
 # mutate(model = factor(model, levels = c("week", "day", "hour", 
                                          #"week_baseline", "day_baseline", "hour_baseline")),
         #y = 1000) |> 
  #arrange(model)
```

### Plots

Model posteriors
```{r}
pp_tidy_day <- pp_day |> 
  tidy(seed = 123)

ci_day <- pp_tidy_day |> 
  summary() #|> 
  #mutate(model = factor(model, levels = c("week", "day", "hour", 
                                          #"week_baseline", "day_baseline", "hour_baseline")),
        # y = 1000)

pp_tidy_day |> 
  #mutate(model = factor(model, levels = c("week", "day", "hour", 
                                         # "week_baseline", "day_baseline", 
                                          #"hour_baseline"))) |>
  ggplot() + 
  geom_histogram(aes(x = posterior), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean),
               data = ci_baseline) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper),
                data = ci_day) +
  #facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  # ylab("Posterior Probability Density") +
  xlab("Area Under ROC Curve")
```

model contrast posteriors
CP commented out - no model contrasts
```{r}
# ci_baseline <- contrast_models(pp_baseline, 
#                   list("hour","day", "week"), 
#                   list("hour_baseline", "day_baseline", "week_baseline")) |> 
#   summary(size = .01) |> 
#   mutate(contrast = factor(contrast,
#                            levels = c("week vs week_baseline",
#                                       "day vs day_baseline",
#                                       "hour vs hour_baseline"),
#                            labels = c("Week vs. Week Baseline",
#                                       "Day vs. Day Baseline",
#                                       "Hour vs. Hour Baseline")),
#          y = 700)
# 
# ci_median_baseline <- pp_baseline |> 
#   contrast_models(list("week","day", "hour"), 
#                 list("week_baseline", "day_baseline", "hour_baseline")) |> 
#   group_by(contrast) |> 
#   summarize(median = quantile(difference, .5)) |> 
#   mutate(contrast = factor(contrast, 
#                            levels = c("week vs. week_baseline", "day vs. day_baseline", 
#                                       "hour vs. hour_baseline"),
#                            labels = c("Week vs. Week Baseline",
#                                       "Day vs. Day Baseline",
#                                       "Hour vs. Hour Baseline")))
# 
# ci_baseline <- ci_baseline |> 
#   left_join(ci_median_baseline, by = c("contrast")) |> 
#   mutate(contrast = factor(contrast, 
#                            levels = c("Week vs. Week Baseline",
#                                       "Day vs. Day Baseline",
#                                       "Hour vs. Hour Baseline")))
# 
# 
# 
# pp_baseline |>
#   tidy(seed = 123) |>
#   group_by(model) |>
#   mutate(sample = row_number()) |>
#   ungroup() |>
#   pivot_wider(names_from = model, values_from = posterior) |> 
#   mutate(hour_vs_hour_baseline = hour - hour_baseline,
#          day_vs_day_baseline = day - day_baseline,
#          week_vs_week_baseline = week - week_baseline) |>
#   pivot_longer(cols = hour_vs_hour_baseline:week_vs_week_baseline,
#                names_to = "contrast",
#                values_to = "posterior") |> 
#   mutate(contrast = factor(contrast,
#                            levels = c("week_vs_week_baseline",
#                                       "day_vs_day_baseline",
#                                       "hour_vs_hour_baseline"),
#                            labels = c("Week vs. Week Baseline",
#                                       "Day vs. Day Baseline",
#                                       "Hour vs. Hour Baseline"))) |> 
#   ggplot() +
#   geom_histogram(aes(x = posterior, fill = contrast), 
#                  color = "black",  alpha = .4, bins = 30, show.legend = FALSE) +
#   geom_vline(xintercept = 0, color = "black", linetype = "dashed") +
#   geom_segment(mapping = aes(y = y+700, yend = y+300, x = median, xend = median,
#                              color = contrast),
#                data = ci_baseline, show.legend = FALSE) +
#   geom_segment(mapping = aes(y = y+500, yend = y+500, x = lower, xend = upper, color = contrast), 
#                data = ci_baseline, show.legend = FALSE) +
#   facet_wrap(~contrast, ncol = 1) +
#   xlab("auROC difference") +
#   ylab("Count") +
#   scale_y_continuous(limits = c(0, 1500))
```






