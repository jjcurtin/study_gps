{
  "hash": "fccbec4f8d3cbc52a469a86deb13a0cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Generate auROC plot for main models of training jobs from CHTC for gps study with version v6 using nested_1_x_10_3_x_10 CV\"\nauthor: \"John Curtin & Claire Punturieri\"\ndate: \"2024-10-23\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\nparams:\n  study: \"gps\"\n  version: \"v6\"\n  cv: \"nested_1_x_10_3_x_10\"\n  algorithms: \"xgboost\"   # \"all\" or name of specific algorithm\n  model: \"main\"\n  window: \"1day\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Housekeeping\n\n## Code status\n\nComplete for use in GPS study as of 10/2024.\n\n## Notes\n\nGenerates auROC plot.\n\n# Set Up\n\n## Set Up Environment\n\n### Study parameters\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\ncv <- params$cv\nmodel <- params$model\nalgorithms <- params$algorithms\nversion <- params$version\nwindow <- params$window\n```\n:::\n\n\n\n### Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntidymodels_conflictRules()\n\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n\n### Packages for script\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyposterior)\nlibrary(yardstick)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'yardstick'\n\nThe following object is masked from 'package:readr':\n\n    spec\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic())\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\n\n\n### Absolute paths\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_models <- format_path(str_c(\"studydata/risk/models/\", study))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprobs <- read_rds(file.path(path_models, str_c(\"inner_preds_\", \n                                           window, \"_\", version, \"_\", \n                                           cv, \"_\", model, \".rds\"))) |>\n  #pivot_longer(cols = starts_with(\"prob\"), \n               #names_to = \"method\", \n               #values_to = \".pred_Lapse\") |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 310,797\nColumns: 7\n$ id_obs          <int> 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456,…\n$ outer_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ inner_split_num <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ prob_raw        <dbl> 0.3209265, 0.3209265, 0.3373791, 0.3209265, 0.3209265,…\n$ prob_iso        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ prob_logi       <dbl> 0.08943453, 0.08943453, 0.07479958, 0.08943453, 0.0894…\n$ label           <fct> no lapse, no lapse, no lapse, no lapse, no lapse, no l…\n```\n\n\n:::\n:::\n\n::: {#cell-fig-auroc-plot .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-auroc-plot\n#| fig-cap: Area under the receiver operating characteristic (auROC) curve for overall validation set performance across all possible classification thresholds.\n#| fig-height: 6\n#| fig-width: 6\n\nroc_data <- probs |> \n  roc_curve(prob_logi, truth = label)\n  \nplot_roc <- function(df, line_colors){\n  df |> \n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +\n    geom_path(linewidth = 1.25) +\n    geom_abline(lty = 3) +\n    coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n    labs(x = \"False Positive Rate\",\n        y = \"True Positive Rate\") +\n  scale_color_manual(values = line_colors)\n}\n\nroc_data |>\n  mutate(sensitivity = round(sensitivity, 4),\n         specificity = round(specificity, 4)) |>\n  group_by(sensitivity, specificity) |> \n  summarise(.threshold = mean(.threshold)) |> \n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = .threshold)) +\n  #ggplot(aes(x = specificity, y = sensitivity, color = .threshold)) +\n  geom_path(linewidth = 1) +\n  geom_abline(lty = 3) +\n  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n  labs(x = \"False Positive Rate\",\n       y = \"True Positive Rate\") +\n  scale_x_continuous(breaks = seq(0,1,.25),\n    labels = sprintf(\"%.2f\", seq(0,1,.25))) + # to flip axis\n  scale_color_gradient(low=\"blue\", high = \"red\", name = \"Threshold\") +\n  theme(axis.text = element_text(size = rel(1.50)), \n        axis.title = element_text(size = rel(1.75)))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'sensitivity'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Area under the receiver operating characteristic (auROC) curve for overall validation set performance across all possible classification thresholds.](auROC_plot_files/figure-html/fig-auroc-plot-1.png){#fig-auroc-plot width=576}\n:::\n:::\n\n\n\nAdd in curves for every outer fold.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# roc_folds <- probs |> \n#   nest(.by = outer_split_num, .key = \"preds\") |> \n#   mutate(roc = map(preds, \\(preds) roc_curve(preds, prob_logi, \n#                                              truth = label)))\n# \n# fig_roc_folds <- roc_data |>   # plot region from full concatenated data\n#   ggplot(aes(x = 1 - specificity, y = sensitivity)) + \n#   geom_abline(lty = 3) +\n#   coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +\n#   labs(x = \"Specificity\",\n#        y = \"Sensitivity\") +\n#   scale_x_continuous(breaks = seq(0,1,.25),\n#     labels = sprintf(\"%.2f\", seq(1,0,-.25))) +\n#   theme(axis.title.x=element_blank(),\n#         axis.text.x=element_blank(),\n#         axis.ticks.x=element_blank())\n#   \n# for (i in 1:nrow(roc_folds)) {\n#   fig_roc_folds <- fig_roc_folds +\n#      geom_path(data = roc_folds$roc[[i]],\n#                mapping = aes(x = 1 - specificity, y = sensitivity),\n#                color = \"gray\")\n# }\n# \n# roc_data_smooth <- roc_data |> mutate(sensitivity = round(sensitivity, 4),\n#                                       specificity = round(specificity, 4)) |>\n#   group_by(sensitivity, specificity) |> \n#   summarise(.threshold = mean(.threshold)) \n# \n# #add full concatenated curve\n# fig_roc_folds +\n#      geom_path(data = roc_data_smooth,\n#                mapping = aes(x = 1 - specificity, y = sensitivity, color = .threshold),\n#                linewidth = 2) +\n#     scale_color_gradient(low=\"blue\", high=\"red\")\n```\n:::",
    "supporting": [
      "auROC_plot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}