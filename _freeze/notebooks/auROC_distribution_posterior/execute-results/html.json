{
  "hash": "d15f88fc80461e6c7b2d62475de33ff7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Evaluate inner auROC for main models of training jobs from CHTC for gps study with version v6 using nested_1_x_10_3_x_10 CV\"\nauthor: \"John Curtin & Claire Punturieri\"\ndate: \"2024-10-23\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\nparams:\n  study: \"gps\"\n  version: \"v6\"\n  cv: \"nested_1_x_10_3_x_10\"\n  algorithms: \"xgboost\"   # \"all\" or name of specific algorithm\n  model: \"main\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Housekeeping\n\n## Code status\n\nComplete for use in GPS study as of 10/2024.\n\n## Notes\n\nGenerates a median auROC histogram for best model configuration.\n\n# Set Up\n\n## Set Up Environment\n\n### Study parameters\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy <- params$study\ncv <- params$cv\nmodel <- params$model\nalgorithms <- params$algorithms\nversion <- params$version\n```\n:::\n\n\n\n### Defaults\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntidymodels_conflictRules()\n\nknitr::opts_chunk$set(attr.output='style=\"max-height: 500px;\"')\n\noptions(tibble.width = Inf)\noptions(tibble.print_max = Inf)\n```\n:::\n\n\n\n### Packages for script\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nlibrary(tidyposterior)\nlibrary(paletteer)\n\ntheme_set(theme_classic())\n\n# EDA\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"c045eee2655a18dc85e715b78182f176327358a7\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# CHTC support functions\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"75cc6f7b855da59c240908bd936834b4da01285b\"\n```\n\n\n:::\n:::\n\n\n\n\n### Absolute paths\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_models <- format_path(str_c(\"studydata/risk/models/\", study))\n```\n:::\n\n\n\n# Generate performance metric plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# probs_local <- read_rds(file.path(path_models, str_c(\"inner_preds_\", \n#                                             window, \"_\", version, \"_\", \n#                                             cv, \"_\", model, \".rds\"))) |>\n#    mutate(prob = prob_logi) |> \n# #   #pivot_longer(cols = starts_with(\"prob\"), \n# #                #names_to = \"method\", \n# #                #values_to = \".pred_Lapse\") |>\n#    glimpse()\n\nprobs <- read_csv(here::here(path_models, str_c(\"best_config_\",\n                                             version, \"_\",\n                                             cv, \"_\", model, \".csv\"))) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 300 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): algorithm, feature_set, resample\ndbl (13): config_num, outer_split_num, inner_split_num, hp1, hp2, hp3, sens,...\nlgl  (1): split_num\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\nRows: 300\nColumns: 17\n$ config_num      <dbl> 150262, 152110, 153958, 155806, 15358, 157654, 159502,…\n$ split_num       <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ outer_split_num <dbl> 9, 9, 9, 9, 1, 9, 9, 9, 9, 9, 10, 10, 10, 10, 1, 10, 1…\n$ inner_split_num <dbl> 2, 3, 4, 5, 9, 6, 7, 8, 9, 10, 1, 2, 3, 4, 10, 5, 6, 7…\n$ algorithm       <chr> \"xgboost\", \"xgboost\", \"xgboost\", \"xgboost\", \"xgboost\",…\n$ feature_set     <chr> \"context_affect_rawdiff\", \"context_affect_rawdiff\", \"c…\n$ hp1             <dbl> 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, …\n$ hp2             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ hp3             <dbl> 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40…\n$ resample        <chr> \"up_1\", \"up_1\", \"up_1\", \"up_1\", \"up_1\", \"up_1\", \"up_1\"…\n$ sens            <dbl> 0.7857143, 0.4626866, 0.7564103, 0.6323529, 0.3673469,…\n$ spec            <dbl> 0.7149758, 0.7260556, 0.6787679, 0.7945652, 0.7647658,…\n$ ppv             <dbl> 0.15714286, 0.10437710, 0.16809117, 0.18534483, 0.0722…\n$ npv             <dbl> 0.9801325, 0.9514170, 0.9701258, 0.9669312, 0.9603581,…\n$ accuracy        <dbl> 0.7194570, 0.7090559, 0.6849037, 0.7834008, 0.7458778,…\n$ bal_accuracy    <dbl> 0.7503451, 0.5943711, 0.7175891, 0.7134591, 0.5660564,…\n$ roc_auc         <dbl> 0.7911939, 0.7197765, 0.7847028, 0.8230499, 0.6704664,…\n```\n\n\n:::\n:::\n\n\n\nCalculate auROC in each fold\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# auROCs <- probs |>\n#   group_by(outer_split_num, inner_split_num) |>\n#   summarize(auROC = roc_auc_vec(truth = label, estimate = prob),\n#             .groups = \"drop\")\n# \n# auROCs |> pull(auROC) |> median()\n```\n:::\n\n\n\n\nGenerate plot across all *inner* folds.\n\n\n::: {#cell-fig-auroc-histogram .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-auroc-histogram\n#| fig-cap: Area under the receiver operating characteristic (auROC) curves for each of 300 (10 x 30) cross validation splits. The dashed line represents the median auROC across all 300 splits.\n#| fig-height: 4\n#| fig-width: 5\n\n# auROCs |> \n#   ggplot(aes(x = auROC)) +\n#   geom_histogram(bins = 10, fill = c(\"#af1f21\")) +\n#   geom_vline(xintercept = median(auROCs$auROC), color = c(\"#f29c96\"), lwd = 1, linetype=\"longdash\") +\n#   labs(x = \"auROC\", y = \"Frequency\")\nprobs |> \n  ggplot(aes(x = roc_auc)) +\n  geom_histogram(bins = 15, color = c(\"#af1f21\"), fill = \"white\") +\n  #geom_step(bins = 10, fill = c(\"#af1f21\")) +\n  #stat_bin(geom=\"step\", bins = 10, color = c(\"#af1f21\"), lwd = 1) +\n  geom_vline(xintercept = median(probs$roc_auc), color = c(\"darkblue\"), lwd = 1, linetype=\"dashed\") +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"auROC\", y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![Area under the receiver operating characteristic (auROC) curves for each of 300 (10 x 30) cross validation splits. The dashed line represents the median auROC across all 300 splits.](auROC_distribution_posterior_files/figure-html/fig-auroc-histogram-1.png){#fig-auroc-histogram width=480}\n:::\n:::\n\n\n\n# Posteriors\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# from ?perf_mod()\n# Repeated CV (id = repeat, id2 = fold within repeat)\n# with a common variance:  statistic ~ model + (model | id2/id)\n\nif(file.exists(here::here(path_models, str_c(\"pp_\",\n                                    version, \"_\",\n                                    cv, \"_\", model, \".rds\")))) {\n  \n  message(\"Model exists! Loading in...\")\n  \n  pp <- read_rds(here::here(path_models, str_c(\"pp_\",\n                                    version, \"_\",\n                                    cv, \"_\", model, \".rds\")))\n} else {\n  \n    message(\"Model does not exist! Running and saving out...\")\n  \n  set.seed(101)\n  \n  pp <- probs |> #auROCs |>\n    select(outer_split_num, inner_split_num, roc_auc) |> \n           #auROC) |> \n    rename(id = outer_split_num,\n           id2 = inner_split_num) |> \n    perf_mod(formula = statistic ~ 1 + (1 | id/id2),\n             # prior_intercept = rstanarm::student_t(autoscale = TRUE),\n             # prior = rstanarm::student_t(autoscale = TRUE),\n             transform = tidyposterior::logit_trans,  # for skewed & bounded AUC\n             iter = 13000, chains = 4,\n             adapt_delta = .99999999,\n             # cores = 4, seed = 12345,\n             family = gaussian)  \n\n\n  pp |> write_rds(here::here(path_models, str_c(\"pp_\",\n                                                version, \"_\",\n                                                cv, \"_\", model, \".rds\")))\n}\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nModel exists! Loading in...\n```\n\n\n:::\n:::\n\n\n\nPosterior graph as density plot\n\n\n::: {#cell-fig-pp .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-pp\n#| fig-cap: Posterior probability distribution of model performance with a 95% credible interval. The dashed line represents median auROC across the sampling distribution, while the dotted line represents chance performance (auROC = 0.50).\n#| fig-height: 3\n#| fig-width: 5\n\npp_tidy <- pp |> \n  tidy(seed = 123)\n\nq <- c(0.025, 0.5, 0.975)\n\nci_day <- pp_tidy |> \n  summarize(median = quantile(posterior, probs = q[2]),\n            lower = quantile(posterior, probs = q[1]), \n            upper = quantile(posterior, probs = q[3])) |> \n  mutate(y = 30)\n\npp_tidy |> \n  ggplot(aes(x = posterior)) + \n  geom_density(color = c(\"#af1f21\"), fill = \"white\", alpha = 1, lwd = .8) +\n  #geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper), color = c(\"#af1f21\"),\n                #data = ci_day, lwd = 1) +\n  geom_errorbar(aes(y = ci_day$y, xmin = ci_day$lower, xmax = ci_day$upper), color = c(\"darkblue\"), lwd = 1) +\n  geom_vline(xintercept = ci_day$median, color = c(\"darkblue\"), lwd = 1, linetype=\"dashed\") +\n  geom_vline(xintercept = .5, color = \"darkblue\", lwd = 1, linetype=\"dotted\") +\n  scale_x_continuous(limits=c(0.49,.76)) +\n  scale_y_continuous(expand = c(0,0)) +\n  ylab(\"Posterior Probability Density\") +\n  xlab(\"Area Under ROC Curve\")\n```\n\n::: {.cell-output-display}\n![Posterior probability distribution of model performance with a 95% credible interval. The dashed line represents median auROC across the sampling distribution, while the dotted line represents chance performance (auROC = 0.50).](auROC_distribution_posterior_files/figure-html/fig-pp-1.png){#fig-pp width=480}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npp_tidy <- pp |> \n  tidy(seed = 123) |> \n  write_csv(here::here(\"objects\", \"pp_tidy.csv\"))\n\npp_tidy |> \n summarize(prob = mean(posterior > .5)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{style=\"max-height: 500px;\"}\n# A tibble: 1 × 1\n   prob\n  <dbl>\n1     1\n```\n\n\n:::\n:::\n",
    "supporting": [
      "auROC_distribution_posterior_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}